# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By

class TestFluxocomprasbanner():
  
  url = "https://www.giulianaflores.com.br"
  
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.driver.implicitly_wait(10)
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_fluxocomprasbanner(self):
        self.driver.get(self.url)
        self.driver.find_element(By.ID, "perfil-hidden").click()   #Login
        self.driver.find_element(By.ID, "UrlLogin").click()

        assert self.driver.find_element(By.CSS_SELECTOR, ".titulo-dept").text == "IDENTIFICAÇÃO"
        
        self.driver.find_element(By.ID, "ContentSite_txtEmail").click()
        self.driver.find_element(By.ID, "ContentSite_txtEmail").send_keys("vinicius.manuel.dasilva@icloud.com")
        self.driver.find_element(By.ID, "ContentSite_txtPassword").click()
        self.driver.find_element(By.ID, "ContentSite_txtPassword").send_keys("QAZwsx123")
        self.driver.find_element(By.ID, "ContentSite_ibtContinue").click()
        self.driver.find_element(By.ID, "ContentSite_txtPassword").click()
        self.driver.find_element(By.ID, "ContentSite_txtPassword").send_keys("QAZwsx123")
        self.driver.find_element(By.ID, "adopt-accept-all-button").click()
        time.sleep(10) #resolver manualmente captcha
        self.driver.find_element(By.ID, "ContentSite_ibtContinue").click() 
        
        self.driver.find_element(By.CSS_SELECTOR, ".swiper-slide-active .img_banner").click()    #Clica no Banner
        
        self.driver.find_element(By.ID, "inputSearchAddress").send_keys("01153000");
        self.driver.find_element(By.CSS_SELECTOR, ".apply-button").click();
        self.driver.find_element(By.CSS_SELECTOR, ".close-button").click();
        
        assert self.driver.find_element(By.CSS_SELECTOR, ".title-item").text == "Buquê Royal de Mini Spray Cor de Rosa"
        
        self.driver.find_element(By.CSS_SELECTOR, ".item:nth-child(1) .image-content > img").click() #clica no produto
        
        assert self.driver.find_element(By.CSS_SELECTOR, ".precoPor_prod").text == "R$ 202,93"
        assert self.driver.find_element(By.ID, "lblIdProduct").text == "Cód. Produto: 31877"
        
        self.driver.execute_script("window.scrollTo(0,139.5)") #rola a tela
    
        self.driver.find_element(By.ID, "ContentSite_txtZip").click() #digitar CEP
        self.driver.find_element(By.ID, "ContentSite_txtZip").send_keys("01153000")
        self.driver.find_element(By.CSS_SELECTOR, ".jOpenShippingPopup").click()
        
        self.driver.find_element(By.CSS_SELECTOR, ".selectDate").click() #selecionar data de entrega
        self.driver.find_element(By.ID, "ContentSite_txtZip").send_keys("2024.05.30")
        self.driver.find_element(By.CSS_SELECTOR, ".jPeriodRadio").click() #selecionar período do dia da entrega
        self.driver.find_element(By.ID, "btConfirmShippingData").click() #botão OK
    
        self.driver.find_element(By.ID, "ContentSite_lbtBuy").click() #adicionar produto ao carrinho
        self.driver.find_element(By.ID, "ContentSite_Basketcontrol1_rptBasket_imbFinalize_0").click() #botão continuar
  
        self.driver.find_element(By.ID, "txtDsDestinationName").click() #nome do destinatário
        self.driver.find_element(By.ID, "txtDsDestinationName").send_keys("Gisele")
    
        self.driver.find_element(By.ID, "ContentSite_rptDeliveryAddress_rbtFgPersonalAddress_0_1_0").click() #tipo de endereço
    
        self.driver.find_element(By.ID, "txtDsNumber").click() #número da casa
        self.driver.find_element(By.ID, "txtDsNumber").send_keys("39")
    
        self.driver.find_element(By.ID, "rbBlankGiftCard").click() #botão cartão em branco
    
        self.driver.find_element(By.ID, "btnContinue").click() #botão continue
        time.sleep(10)

        self.driver.back() #retorna  1 página
        self.driver.back()
    
        self.driver.find_element(By.ID, "ContentSite_Basketcontrol1_rptBasket_rptBasketItems_0_lbtRemoveProduct_0").click() #remover produtos do carrinho
    
        numero_carrinho = self.driver.find_elements(By.CSS_SELECTOR, ".bg_carrinho jBasketLink")
        
        assert len(numero_carrinho) == 0 #valida quantidade   
   
        self.driver.find_element(By.CSS_SELECTOR, "#perfil-hidden > img").click() #menu
        self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(11) > a:nth-child(2)").click() #logout
      